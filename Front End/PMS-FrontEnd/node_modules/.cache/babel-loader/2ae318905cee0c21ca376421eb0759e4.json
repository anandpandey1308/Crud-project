{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\src\\\\components\\\\AddAppointment.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AppointmentForm from \"./AppointmentForm\";\nimport * as appointmentApi from \"../api/appointmentApi\";\nimport { toast } from \"react-toastify\";\nimport AppointmentDataService from \"../service/AppointmentDataService\";\n\nconst AddAppointmentPage = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState({\n    id: null,\n    name: \"\",\n    dob: null,\n    gender: null,\n    guardian: \"\",\n    disease: \"\",\n    address: \"\",\n    city: \"\",\n    state: null,\n    country: null,\n    zip: \"\",\n    phone: \"\",\n    insuranceName: \"\",\n    insuranceNo: \"\",\n    appointments: [{\n      id: null,\n      slug: \"\",\n      time: null,\n      doctor: null,\n      nurse: null,\n      room: null\n    }]\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        patient = _useState4[0],\n        setPatient = _useState4[1];\n\n  const _useState5 = useState({\n    id: null,\n    slug: \"\",\n    time: null,\n    doctor: null,\n    nurse: null,\n    room: null\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        appointment = _useState6[0],\n        setAppointment = _useState6[1];\n\n  useEffect(() => {\n    const slug = props.match.params.slug;\n\n    if (slug) {\n      appointmentApi.getAppointmentBySlug(slug).then(_appointment => setAppointment(_appointment));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange({\n    target\n  }) {\n    setAppointment(_objectSpread({}, appointment, {\n      [target.name]: target.value\n    }));\n    setPatient(_objectSpread({}, patient, {\n      [target.name]: target.value\n    }));\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!patient.name) _errors.name = \"Patient's name is required.\";\n    if (!patient.dob) _errors.dob = \"Date of Birth is required.\";\n    if (!patient.gender) _errors.gender = \"Gender is required.\";\n    if (!appointment.disease) _errors.disease = \"Disease is required.\";\n    if (!patient.address) _errors.address = \"Address is required.\";\n    if (!patient.city) _errors.city = \"City is required.\";\n    if (!patient.state) _errors.state = \"State is required.\";\n    if (!patient.country) _errors.country = \"Country is required.\";\n    if (!patient.zip) _errors.zip = \"Zip is required.\";\n    if (patient.zip && patient.zip.length !== 6) _errors.zip = \"Zip code contain 6 digits.\";\n    if (!patient.phone) _errors.phone = \"Phone is required.\";\n    if (patient.phone && patient.phone.length !== 10) _errors.phone = \"Phone number should contain 10 digits .\";\n    if (!appointment.time) _errors.time = \"Appointment time is required.\";\n    if (!appointment.doctor) _errors.doctor = \"Doctor is required.\";\n    if (!appointment.room) _errors.room = \"Room number is required.\";\n    setErrors(_errors); //Form is valid if the error object has no properties.\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    debugger;\n    event.preventDefault();\n    if (!formIsValid()) return;\n    const index = patient.appointments.length;\n    patient.appointments[index - 1] = appointment;\n    AppointmentDataService.addAppointment(patient).then(response => {\n      console.log(response);\n      props.history.push(\"/appointments\");\n      toast.success(\"Appointment saved.\");\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  const headingStyle = {\n    backgroundColor: \"#1e90ff\",\n    color: \"white\",\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 10,\n    borderRadius: 10\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    style: headingStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, \"Add Appointment\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(AppointmentForm, {\n    errors: errors,\n    patient: patient,\n    appointment: appointment,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }));\n};\n\nexport default AddAppointmentPage;","map":{"version":3,"sources":["C:\\Users\\AP073619\\OneDrive - Cerner Corporation\\Desktop\\FrontEnd\\Patient-Appointment-Scheduling-System-NG073320\\Patient-Appointment-Scheduling-System-NG073320\\appointment-frontend\\src\\components\\AddAppointment.js"],"names":["React","useState","useEffect","AppointmentForm","appointmentApi","toast","AppointmentDataService","AddAppointmentPage","props","errors","setErrors","id","name","dob","gender","guardian","disease","address","city","state","country","zip","phone","insuranceName","insuranceNo","appointments","slug","time","doctor","nurse","room","patient","setPatient","appointment","setAppointment","match","params","getAppointmentBySlug","then","_appointment","handleChange","target","value","formIsValid","_errors","length","Object","keys","handleSubmit","event","preventDefault","index","addAppointment","response","console","log","history","push","success","error","headingStyle","backgroundColor","color","margin","display","justifyContent","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AppointmentForm from \"./AppointmentForm\";\r\nimport * as appointmentApi from \"../api/appointmentApi\";\r\nimport { toast } from \"react-toastify\";\r\nimport AppointmentDataService from \"../service/AppointmentDataService\";\r\n\r\nconst AddAppointmentPage = props => {\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const [patient, setPatient] = useState({\r\n    id: null,\r\n    name: \"\",\r\n    dob: null,\r\n    gender: null,\r\n    guardian: \"\",\r\n    disease: \"\",\r\n    address: \"\",\r\n    city: \"\",\r\n    state: null,\r\n    country: null,\r\n    zip: \"\",\r\n    phone: \"\",\r\n    insuranceName: \"\",\r\n    insuranceNo: \"\",\r\n    appointments: [\r\n      {\r\n        id: null,\r\n        slug: \"\",\r\n        time: null,\r\n        doctor: null,\r\n        nurse: null,\r\n        room: null\r\n      }\r\n    ]\r\n  });\r\n\r\n  const [appointment, setAppointment] = useState({\r\n    id: null,\r\n    slug: \"\",\r\n    time: null,\r\n    doctor: null,\r\n    nurse: null,\r\n    room: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const slug = props.match.params.slug;\r\n    if (slug) {\r\n      appointmentApi\r\n        .getAppointmentBySlug(slug)\r\n        .then(_appointment => setAppointment(_appointment));\r\n    }\r\n  }, [props.match.params.slug]);\r\n\r\n  function handleChange({ target }) {\r\n    setAppointment({ ...appointment, [target.name]: target.value });\r\n    setPatient({ ...patient, [target.name]: target.value });\r\n  }\r\n\r\n  function formIsValid() {\r\n    const _errors = {};\r\n    if (!patient.name) _errors.name = \"Patient's name is required.\";\r\n    if (!patient.dob) _errors.dob = \"Date of Birth is required.\";\r\n    if (!patient.gender) _errors.gender = \"Gender is required.\";\r\n    if (!appointment.disease) _errors.disease = \"Disease is required.\";\r\n    if (!patient.address) _errors.address = \"Address is required.\";\r\n    if (!patient.city) _errors.city = \"City is required.\";\r\n    if (!patient.state) _errors.state = \"State is required.\";\r\n    if (!patient.country) _errors.country = \"Country is required.\";\r\n    if (!patient.zip) _errors.zip = \"Zip is required.\";\r\n    if (patient.zip && patient.zip.length !== 6)\r\n      _errors.zip = \"Zip code contain 6 digits.\";\r\n    if (!patient.phone) _errors.phone = \"Phone is required.\";\r\n    if (patient.phone && patient.phone.length !== 10)\r\n      _errors.phone = \"Phone number should contain 10 digits .\";\r\n    if (!appointment.time) _errors.time = \"Appointment time is required.\";\r\n    if (!appointment.doctor) _errors.doctor = \"Doctor is required.\";\r\n    if (!appointment.room) _errors.room = \"Room number is required.\";\r\n\r\n    setErrors(_errors);\r\n    //Form is valid if the error object has no properties.\r\n\r\n    return Object.keys(_errors).length === 0;\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n    debugger;\r\n    event.preventDefault();\r\n    if (!formIsValid()) return;\r\n    const index = patient.appointments.length;\r\n    patient.appointments[index - 1] = appointment;\r\n    AppointmentDataService.addAppointment(patient).then(\r\n      response => {\r\n        console.log(response);\r\n        props.history.push(\"/appointments\");\r\n        toast.success(\"Appointment saved.\");\r\n      },\r\n      error => {\r\n        console.log(error);\r\n      }\r\n    );\r\n  }\r\n\r\n  const headingStyle = {\r\n    backgroundColor: \"#1e90ff\",\r\n    color: \"white\",\r\n    margin: \"auto\",\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    borderRadius: 10\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <br />\r\n      <h1 style={headingStyle}>Add Appointment</h1>\r\n      <br />\r\n      <AppointmentForm\r\n        errors={errors}\r\n        patient={patient}\r\n        appointment={appointment}\r\n        onChange={handleChange}\r\n        onSubmit={handleSubmit}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddAppointmentPage;\r\n"]},"metadata":{},"sourceType":"module"}