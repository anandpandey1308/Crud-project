{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\src\\\\components\\\\PatientsList.js\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction PatientsList(props) {\n  function getTimeAndDate(time) {\n    var dateTime = new Date(time);\n    var options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n\n    var _date = dateTime.toLocaleDateString(\"en-US\", options);\n\n    return _date;\n  }\n\n  return React.createElement(\"table\", {\n    className: \"table\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Full Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Date of Birth\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Gender\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Address\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Phone\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"Insurance Number\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Insurance Name\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, props.patient.map(patient => {\n    var dateAndTime = getTimeAndDate(patient.dob);\n    return React.createElement(\"tr\", {\n      key: patient.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/show-appointment/\" + patient.appointments[0].slug,\n      query: {\n        appointment: patient\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, patient.name)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, dateAndTime), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, patient.gender), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, patient.address, \", \", patient.city, \", \", patient.state, \",\", \" \", patient.country, \", \", patient.zip), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, patient.phone), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, patient.insuranceNo), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, patient.insuranceName), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Link, {\n      className: \"btn btn-primary\",\n      to: \"/add-appointment-existing\",\n      query: {\n        patient: patient\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"Add Appointment\")));\n  })));\n}\n\nPatientsList.prototype = {\n  appointment: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    slug: PropTypes.string,\n    name: PropTypes.string.isRequired,\n    dob: PropTypes.string.isRequired,\n    gender: PropTypes.string.isRequired,\n    address: PropTypes.string,\n    phone: PropTypes.string.isRequired,\n    insuranceNo: PropTypes.string.isRequired,\n    insuranceName: PropTypes.string.isRequired,\n    appointments: PropTypes.array.isRequired\n  })).isRequired\n};\nPatientsList.defaultProps = {\n  appointment: []\n};\nexport default PatientsList;","map":{"version":3,"sources":["C:\\Users\\AP073619\\OneDrive - Cerner Corporation\\Desktop\\FrontEnd\\Patient-Appointment-Scheduling-System-NG073320\\Patient-Appointment-Scheduling-System-NG073320\\appointment-frontend\\src\\components\\PatientsList.js"],"names":["React","PropTypes","Link","PatientsList","props","getTimeAndDate","time","dateTime","Date","options","year","month","day","_date","toLocaleDateString","patient","map","dateAndTime","dob","id","appointments","slug","appointment","name","gender","address","city","state","country","zip","phone","insuranceNo","insuranceName","prototype","arrayOf","shape","number","isRequired","string","array","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,kBAArB;;AAEA,SAASC,YAAT,CAAsBC,KAAtB,EAA6B;AAC3B,WAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC5B,QAAIC,QAAQ,GAAG,IAAIC,IAAJ,CAASF,IAAT,CAAf;AACA,QAAIG,OAAO,GAAG;AACZC,MAAAA,IAAI,EAAE,SADM;AAEZC,MAAAA,KAAK,EAAE,OAFK;AAGZC,MAAAA,GAAG,EAAE;AAHO,KAAd;;AAKA,QAAIC,KAAK,GAAGN,QAAQ,CAACO,kBAAT,CAA4B,OAA5B,EAAqCL,OAArC,CAAZ;;AACA,WAAOI,KAAP;AACD;;AAED,SACE;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,CADF,EAaE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,KAAK,CAACW,OAAN,CAAcC,GAAd,CAAkBD,OAAO,IAAI;AAC5B,QAAIE,WAAW,GAAGZ,cAAc,CAACU,OAAO,CAACG,GAAT,CAAhC;AACA,WACE;AAAI,MAAA,GAAG,EAAEH,OAAO,CAACI,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,EAAE,EAAE,uBAAuBJ,OAAO,CAACK,YAAR,CAAqB,CAArB,EAAwBC,IADrD;AAEE,MAAA,KAAK,EAAE;AAAEC,QAAAA,WAAW,EAAEP;AAAf,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGA,OAAO,CAACQ,IAJX,CADF,CADF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKN,WAAL,CATF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKF,OAAO,CAACS,MAAb,CAVF,EAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,OAAO,CAACU,OADX,QACsBV,OAAO,CAACW,IAD9B,QACsCX,OAAO,CAACY,KAD9C,OACsD,GADtD,EAEGZ,OAAO,CAACa,OAFX,QAEsBb,OAAO,CAACc,GAF9B,CAXF,EAeE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKd,OAAO,CAACe,KAAb,CAfF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKf,OAAO,CAACgB,WAAb,CAhBF,EAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKhB,OAAO,CAACiB,aAAb,CAjBF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAC,iBADZ;AAEE,MAAA,EAAE,EAAC,2BAFL;AAGE,MAAA,KAAK,EAAE;AAAEjB,QAAAA,OAAO,EAAEA;AAAX,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAlBF,CADF;AA8BD,GAhCA,CADH,CAbF,CADF;AAmDD;;AAEDZ,YAAY,CAAC8B,SAAb,GAAyB;AACvBX,EAAAA,WAAW,EAAErB,SAAS,CAACiC,OAAV,CACXjC,SAAS,CAACkC,KAAV,CAAgB;AACdhB,IAAAA,EAAE,EAAElB,SAAS,CAACmC,MAAV,CAAiBC,UADP;AAEdhB,IAAAA,IAAI,EAAEpB,SAAS,CAACqC,MAFF;AAGdf,IAAAA,IAAI,EAAEtB,SAAS,CAACqC,MAAV,CAAiBD,UAHT;AAIdnB,IAAAA,GAAG,EAAEjB,SAAS,CAACqC,MAAV,CAAiBD,UAJR;AAKdb,IAAAA,MAAM,EAAEvB,SAAS,CAACqC,MAAV,CAAiBD,UALX;AAMdZ,IAAAA,OAAO,EAAExB,SAAS,CAACqC,MANL;AAOdR,IAAAA,KAAK,EAAE7B,SAAS,CAACqC,MAAV,CAAiBD,UAPV;AAQdN,IAAAA,WAAW,EAAE9B,SAAS,CAACqC,MAAV,CAAiBD,UARhB;AASdL,IAAAA,aAAa,EAAE/B,SAAS,CAACqC,MAAV,CAAiBD,UATlB;AAUdjB,IAAAA,YAAY,EAAEnB,SAAS,CAACsC,KAAV,CAAgBF;AAVhB,GAAhB,CADW,EAaXA;AAdqB,CAAzB;AAiBAlC,YAAY,CAACqC,YAAb,GAA4B;AAC1BlB,EAAAA,WAAW,EAAE;AADa,CAA5B;AAGA,eAAenB,YAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nfunction PatientsList(props) {\n  function getTimeAndDate(time) {\n    var dateTime = new Date(time);\n    var options = {\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\"\n    };\n    var _date = dateTime.toLocaleDateString(\"en-US\", options);\n    return _date;\n  }\n\n  return (\n    <table className=\"table\">\n      <thead>\n        <tr>\n          <th>Full Name</th>\n          <th>Date of Birth</th>\n          <th>Gender</th>\n          <th>Address</th>\n          <th>Phone</th>\n          <th>Insurance Number</th>\n          <th>Insurance Name</th>\n          <th />\n        </tr>\n      </thead>\n      <tbody>\n        {props.patient.map(patient => {\n          var dateAndTime = getTimeAndDate(patient.dob);\n          return (\n            <tr key={patient.id}>\n              <td>\n                <Link\n                  to={\"/show-appointment/\" + patient.appointments[0].slug}\n                  query={{ appointment: patient }}\n                >\n                  {patient.name}\n                </Link>\n              </td>\n              <td>{dateAndTime}</td>\n              <td>{patient.gender}</td>\n              <td>\n                {patient.address}, {patient.city}, {patient.state},{\" \"}\n                {patient.country}, {patient.zip}\n              </td>\n              <td>{patient.phone}</td>\n              <td>{patient.insuranceNo}</td>\n              <td>{patient.insuranceName}</td>\n              <td>\n                <Link\n                  className=\"btn btn-primary\"\n                  to=\"/add-appointment-existing\"\n                  query={{ patient: patient }}\n                >\n                  Add Appointment\n                </Link>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n}\n\nPatientsList.prototype = {\n  appointment: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      slug: PropTypes.string,\n      name: PropTypes.string.isRequired,\n      dob: PropTypes.string.isRequired,\n      gender: PropTypes.string.isRequired,\n      address: PropTypes.string,\n      phone: PropTypes.string.isRequired,\n      insuranceNo: PropTypes.string.isRequired,\n      insuranceName: PropTypes.string.isRequired,\n      appointments: PropTypes.array.isRequired\n    })\n  ).isRequired\n};\n\nPatientsList.defaultProps = {\n  appointment: []\n};\nexport default PatientsList;\n"]},"metadata":{},"sourceType":"module"}