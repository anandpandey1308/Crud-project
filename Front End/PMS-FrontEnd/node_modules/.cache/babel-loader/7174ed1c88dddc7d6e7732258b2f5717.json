{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\src\\\\components\\\\AppointmentForm.js\";\nimport React from \"react\";\nimport TextInput from \"./common/TextInput\";\nimport PropTypes from \"prop-types\";\n\nfunction AppointmentForm(props) {\n  const style = {\n    marginLeft: 100,\n    marginRight: 100\n  };\n  const styleRed = {\n    color: \"red\"\n  }; // function dateToString(date) {\n  //   var _date = new Date(date);\n  //   var days = _date.getDate();\n  //   if (days < 10) days = \"0\" + days;\n  //   var month = _date.getMonth() + 1; //Current Month\n  //   if (month < 10) month = \"0\" + month;\n  //   var year = _date.getFullYear(); //Current Year\n  //   var hours = _date.getHours(); //Current Hours\n  //   if (hours < 10) hours = \"0\" + hours;\n  //   var min = _date.getMinutes(); //Current Minutes\n  //   if (min < 10) min = \"0\" + min;\n  //   const dateString =\n  //     year + \"-\" + month + \"-\" + days + \"T\" + hours + \":\" + min;\n  //   return dateString;\n  // }\n  // function addDays() {\n  //   var date = new Date();\n  //   date.setDate(date.getDate() + 7);\n  //   return date;\n  // }\n  // var date = new Date(); //Current Date\n  // var minDate = dateToString(date);\n  // var nextDate = addDays();\n  // var maxDate = dateToString(nextDate);\n\n  return React.createElement(\"form\", {\n    onSubmit: props.onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    style: styleRed,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"* Required fields\"), React.createElement(\"h4\", {\n    className: \"jumbotron\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Patient Details\"), React.createElement(\"div\", {\n    style: style,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"name\",\n    label: \"Patient Full Name*\",\n    onChange: props.onChange,\n    name: \"name\",\n    value: props.patient.name,\n    error: props.errors.name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"dob\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Date of Birth*\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"dob\",\n    type: \"date\",\n    onChange: props.onChange,\n    name: \"dob\",\n    className: \"form-control\",\n    value: props.patient.dob || \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), props.errors.dob && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, props.errors.dob)), React.createElement(\"div\", {\n    className: \"form-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"gender\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Gender*\"), React.createElement(\"div\", {\n    className: \"field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    id: \"gender\",\n    onChange: props.onChange,\n    name: \"gender\",\n    value: props.patient.gender || \"\",\n    className: \"form-control\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"option\", {\n    value: \"\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }), React.createElement(\"option\", {\n    value: \"Male\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Male\"), React.createElement(\"option\", {\n    value: \"Female\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Female\"), React.createElement(\"option\", {\n    value: \"Other\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Other\"))), props.errors.gender && React.createElement(\"div\", {\n    className: \"alert alert-danger\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, props.errors.gender)), React.createElement(TextInput, {\n    id: \"phone\",\n    label: \"Phone Number*\",\n    onChange: props.onChange,\n    name: \"phone\",\n    value: props.patient.phone,\n    error: props.errors.phone,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Save\",\n    className: \"btn btn-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }));\n}\n\nAppointmentForm.propTypes = {\n  appointment: PropTypes.object.isRequired,\n  patient: PropTypes.object.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n};\nexport default AppointmentForm;","map":{"version":3,"sources":["C:\\Users\\AP073619\\OneDrive - Cerner Corporation\\Desktop\\FrontEnd\\Patient-Appointment-Scheduling-System-NG073320\\Patient-Appointment-Scheduling-System-NG073320\\appointment-frontend\\src\\components\\AppointmentForm.js"],"names":["React","TextInput","PropTypes","AppointmentForm","props","style","marginLeft","marginRight","styleRed","color","onSubmit","onChange","patient","name","errors","dob","gender","phone","propTypes","appointment","object","isRequired","func"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport TextInput from \"./common/TextInput\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AppointmentForm(props) {\r\n  const style = {\r\n    marginLeft: 100,\r\n    marginRight: 100\r\n  };\r\n\r\n  const styleRed = {\r\n    color: \"red\"\r\n  };\r\n\r\n  // function dateToString(date) {\r\n  //   var _date = new Date(date);\r\n  //   var days = _date.getDate();\r\n  //   if (days < 10) days = \"0\" + days;\r\n  //   var month = _date.getMonth() + 1; //Current Month\r\n  //   if (month < 10) month = \"0\" + month;\r\n  //   var year = _date.getFullYear(); //Current Year\r\n  //   var hours = _date.getHours(); //Current Hours\r\n  //   if (hours < 10) hours = \"0\" + hours;\r\n  //   var min = _date.getMinutes(); //Current Minutes\r\n  //   if (min < 10) min = \"0\" + min;\r\n  //   const dateString =\r\n  //     year + \"-\" + month + \"-\" + days + \"T\" + hours + \":\" + min;\r\n  //   return dateString;\r\n  // }\r\n\r\n  // function addDays() {\r\n  //   var date = new Date();\r\n  //   date.setDate(date.getDate() + 7);\r\n  //   return date;\r\n  // }\r\n\r\n  // var date = new Date(); //Current Date\r\n  // var minDate = dateToString(date);\r\n  // var nextDate = addDays();\r\n  // var maxDate = dateToString(nextDate);\r\n\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <p style={styleRed}>* Required fields</p>\r\n      <h4 className=\"jumbotron\">Patient Details</h4>\r\n      <div style={style}>\r\n        <TextInput\r\n          id=\"name\"\r\n          label=\"Patient Full Name*\"\r\n          onChange={props.onChange}\r\n          name=\"name\"\r\n          value={props.patient.name}\r\n          error={props.errors.name}\r\n        />\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"dob\">Date of Birth*</label>\r\n          <div className=\"field\">\r\n            <input\r\n              id=\"dob\"\r\n              type=\"date\"\r\n              onChange={props.onChange}\r\n              name=\"dob\"\r\n              className=\"form-control\"\r\n              value={props.patient.dob || \"\"}\r\n            />\r\n          </div>\r\n          {props.errors.dob && (\r\n            <div className=\"alert alert-danger\">{props.errors.dob}</div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"gender\">Gender*</label>\r\n          <div className=\"field\">\r\n            <select\r\n              id=\"gender\"\r\n              onChange={props.onChange}\r\n              name=\"gender\"\r\n              value={props.patient.gender || \"\"}\r\n              className=\"form-control\"\r\n            >\r\n              <option value=\"\" />\r\n              <option value=\"Male\">Male</option>\r\n              <option value=\"Female\">Female</option>\r\n              <option value=\"Other\">Other</option>\r\n            </select>\r\n          </div>\r\n          {props.errors.gender && (\r\n            <div className=\"alert alert-danger\">{props.errors.gender}</div>\r\n          )}\r\n        </div>\r\n        <TextInput\r\n          id=\"phone\"\r\n          label=\"Phone Number*\"\r\n          onChange={props.onChange}\r\n          name=\"phone\"\r\n          value={props.patient.phone}\r\n          error={props.errors.phone}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save\" className=\"btn btn-primary\" />\r\n    </form>\r\n  );\r\n}\r\n\r\nAppointmentForm.propTypes = {\r\n  appointment: PropTypes.object.isRequired,\r\n  patient: PropTypes.object.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\n\r\nexport default AppointmentForm;\r\n"]},"metadata":{},"sourceType":"module"}