{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\AP073619\\\\OneDrive - Cerner Corporation\\\\Desktop\\\\FrontEnd\\\\Patient-Appointment-Scheduling-System-NG073320\\\\Patient-Appointment-Scheduling-System-NG073320\\\\appointment-frontend\\\\src\\\\components\\\\AddAppointmentForExistingPatient.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AppointmentFormFormExisting from \"./AppointmentFormForExisting\";\nimport * as appointmentApi from \"../api/appointmentApi\";\nimport { toast } from \"react-toastify\";\nimport AppointmentDataService from \"../service/AppointmentDataService\";\n\nconst AddAppointmentPageForExistingPatient = props => {\n  const _useState = useState({}),\n        _useState2 = _slicedToArray(_useState, 2),\n        errors = _useState2[0],\n        setErrors = _useState2[1];\n\n  const _useState3 = useState({\n    id: null,\n    name: \"\",\n    dob: null,\n    gender: null,\n    appointments: [{\n      id: null,\n      slug: \"\",\n      time: null,\n      doctor: null,\n      nurse: null,\n      room: null\n    }]\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        patient = _useState4[0],\n        setPatient = _useState4[1];\n\n  const _useState5 = useState({\n    id: null,\n    slug: \"\",\n    time: null,\n    doctor: null,\n    nurse: null,\n    room: null\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        appointment = _useState6[0],\n        setAppointment = _useState6[1];\n\n  useEffect(() => {\n    const slug = props.match.params.slug;\n\n    if (slug) {\n      appointmentApi.getAppointmentBySlug(slug).then(_appointment => setAppointment(_appointment));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange({\n    target\n  }) {\n    setAppointment(_objectSpread({}, appointment, {\n      [target.name]: target.value\n    }));\n    setPatient(_objectSpread({}, patient, {\n      [target.name]: target.value\n    }));\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!appointment.disease) _errors.disease = \"Disease is required.\";\n    if (!appointment.time) _errors.time = \"Appointment time is required.\";\n    if (!appointment.doctor) _errors.doctor = \"Doctor is required.\";\n    if (!appointment.room) _errors.room = \"Room number is required.\";\n    setErrors(_errors); //Form is valid if the error object has no properties.\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    debugger;\n    event.preventDefault();\n    if (!formIsValid()) return;\n    const index = patient.appointments.length;\n    patient.appointments[index - 1] = appointment;\n    AppointmentDataService.addAppointment(patient).then(response => {\n      console.log(response);\n      props.history.push(\"/appointments\");\n      toast.success(\"Appointment saved.\");\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  const headingStyle = {\n    backgroundColor: \"#1e90ff\",\n    color: \"white\",\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 10,\n    borderRadius: 10\n  };\n  return React.createElement(React.Fragment, null, React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    style: headingStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Add Appointment\"), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(AppointmentFormFormExisting, {\n    errors: errors,\n    patient: patient,\n    appointment: appointment,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }));\n};\n\nexport default AddAppointmentPageForExistingPatient;","map":{"version":3,"sources":["C:\\Users\\AP073619\\OneDrive - Cerner Corporation\\Desktop\\FrontEnd\\Patient-Appointment-Scheduling-System-NG073320\\Patient-Appointment-Scheduling-System-NG073320\\appointment-frontend\\src\\components\\AddAppointmentForExistingPatient.js"],"names":["React","useState","useEffect","AppointmentFormFormExisting","appointmentApi","toast","AppointmentDataService","AddAppointmentPageForExistingPatient","props","errors","setErrors","id","name","dob","gender","appointments","slug","time","doctor","nurse","room","patient","setPatient","appointment","setAppointment","match","params","getAppointmentBySlug","then","_appointment","handleChange","target","value","formIsValid","_errors","disease","Object","keys","length","handleSubmit","event","preventDefault","index","addAppointment","response","console","log","history","push","success","error","headingStyle","backgroundColor","color","margin","display","justifyContent","padding","borderRadius"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AppointmentFormFormExisting from \"./AppointmentFormForExisting\";\nimport * as appointmentApi from \"../api/appointmentApi\";\nimport { toast } from \"react-toastify\";\nimport AppointmentDataService from \"../service/AppointmentDataService\";\n\nconst AddAppointmentPageForExistingPatient = props => {\n  const [errors, setErrors] = useState({});\n\n  const [patient, setPatient] = useState({\n    id: null,\n    name: \"\",\n    dob: null,\n    gender: null,\n    appointments: [\n      {\n        id: null,\n        slug: \"\",\n        time: null,\n        doctor: null,\n        nurse: null,\n        room: null\n      }\n    ]\n  });\n\n  const [appointment, setAppointment] = useState({\n    id: null,\n    slug: \"\",\n    time: null,\n    doctor: null,\n    nurse: null,\n    room: null\n  });\n\n  useEffect(() => {\n    const slug = props.match.params.slug;\n    if (slug) {\n      appointmentApi\n        .getAppointmentBySlug(slug)\n        .then(_appointment => setAppointment(_appointment));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange({ target }) {\n    setAppointment({ ...appointment, [target.name]: target.value });\n    setPatient({ ...patient, [target.name]: target.value });\n  }\n\n  function formIsValid() {\n    const _errors = {};\n    if (!appointment.disease) _errors.disease = \"Disease is required.\";\n    if (!appointment.time) _errors.time = \"Appointment time is required.\";\n    if (!appointment.doctor) _errors.doctor = \"Doctor is required.\";\n    if (!appointment.room) _errors.room = \"Room number is required.\";\n\n    setErrors(_errors);\n    //Form is valid if the error object has no properties.\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    debugger;\n    event.preventDefault();\n    if (!formIsValid()) return;\n    const index = patient.appointments.length;\n    patient.appointments[index - 1] = appointment;\n    AppointmentDataService.addAppointment(patient).then(\n      response => {\n        console.log(response);\n        props.history.push(\"/appointments\");\n        toast.success(\"Appointment saved.\");\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  const headingStyle = {\n    backgroundColor: \"#1e90ff\",\n    color: \"white\",\n    margin: \"auto\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    padding: 10,\n    borderRadius: 10\n  };\n\n  return (\n    <>\n      <br />\n      <h1 style={headingStyle}>Add Appointment</h1>\n      <br />\n      <AppointmentFormFormExisting\n        errors={errors}\n        patient={patient}\n        appointment={appointment}\n        onChange={handleChange}\n        onSubmit={handleSubmit}\n      />\n    </>\n  );\n};\n\nexport default AddAppointmentPageForExistingPatient;\n"]},"metadata":{},"sourceType":"module"}